<!DOCTYPE html>
<html lang="fr" data-theme="<%= typeof theme !== 'undefined' ? theme : 'default' %>">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0"/>
  <title>Sélection des joueurs - Dartboard</title>

  <!-- CSS  -->
  <link href="../../css/font-awesome.css" rel="stylesheet">
  <link href="../../css/materialize.css" type="text/css" rel="stylesheet" media="screen,projection"/>
  <link href="../../css/theme-base.css" type="text/css" rel="stylesheet"/>
  <link href="../../css/themes/<%= typeof theme !== 'undefined' ? theme : 'default' %>.css" type="text/css" rel="stylesheet"/>
</head>

<body>
  <div class="main-container">
    <div class="section" style="padding: 10px 0;">
      <div class="row" style="margin-bottom: 0;">
        <div class="col s12 m2">
          <div class="icon-block">
            <div class="center titleMenuLeft">DART</div>
          </div>
        </div>
        <div class="col s12 m8">
          <div class="icon-block">
            <div class="center titleMenu">Nombre de joueur</div>
          </div>
        </div>
        <div class="col s12 m2">
          <div class="icon-block">
            <div class="center titleMenuLeft">DART</div>
          </div>
        </div>
      </div>
      
      <div class="content-section">
        <div class="row">
          <div class="col s12 m8">
            <div class="icon-block">
              <div class="center titleChoiceGame">Choisissez le nombre de joueurs</div>
            </div>
            
            <!-- Sélection du nombre de joueurs -->
            <div class="player-number-selection">
              <div class="row" style="display: flex; justify-content: center;">
                <% for(var i=1; i<=nbPlayerMax; i++) {%>
                  <div class="col s3 m3" style="text-align: center;">
                    <div class="box boxGame<%- i %>" data-nbPlayer="<%- i %>">
                      <span></span>
                      <span></span>
                      <span></span>
                      <span></span>
                      <div class="content">
                        <h2><a id="aCricket"><%- i %></a></h2>
                      </div>
                    </div>
                  </div>
                <% } %>
              </div>
            </div>
            
            <!-- Sélection des profils de joueurs dans un format compact -->
            <div class="player-profiles" style="display: none;">
              <div class="icon-block">
                <div class="center titleChoiceGame">Sélection des joueurs</div>
              </div>
              
              <div class="player-grid">
                <% for(var i=1; i<=4; i++) { %>
                  <div class="player-selection player-<%- i %>" style="display: none;">
                    <div class="card">
                      <div class="card-content">
                        <span class="card-title">Joueur <%- i %></span>
                        <div class="input-field" style="margin: 10px 0;">
                          <select id="player-<%- i %>-select" class="browser-default" style="display: block !important;">
                            <option value="default">Joueur <%- i %> (Anonyme)</option>
                            <% if (typeof players !== 'undefined' && players.length > 0) { %>
                              <% players.forEach(function(player) { %>
                                <option value="<%- player.id %>"><%- player.name %></option>
                              <% }); %>
                            <% } %>
                          </select>
                        </div>
                      </div>
                    </div>
                  </div>
                <% } %>
              </div>
              
              <div class="game-buttons">
                <button id="startGameBtn" class="btn-action">
                  Commencer la partie
                  <i class="fa fa-arrow-right"></i>
                </button>
              </div>
            </div>
          </div>
          
          <div class="col s12 m4">
            <div class="box boxLastGame">
              <span></span>
              <span></span>
              <span></span>
              <span></span>
              <div class="content">
                <h2 style="margin-top: 0;"><a href="">Règles</a></h2>
                <p style="text-align: left; font-size: 16px; margin-top: 20px;">
                  Sélectionnez d'abord le nombre de joueurs, puis choisissez un profil pour chaque joueur ou laissez-les en anonyme.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!--  Scripts-->
  <script src="../../js/jquery-2.1.1.min.js"></script>
  <script src="../../js/materialize.min.js"></script>
  <script src="../../js/socket.io.js"></script>

  <script>
    var socket = io();
    let gameSelected = 1;
    let nbTotalGame = parseInt("<%- nbPlayerMax %>");
    let lastMsg = '';
    let selectedPlayers = {};
    let isPlayerSelectionMode = false;

    socket.on('arduino', function(msg) {
      arduinoEvent(msg);
    });
    $('.boxGame1').addClass('selected');
    
    function arduinoEvent(msg){
      if(lastMsg === '') {
        lastMsg = msg;
        if(msg === 'btnNext'){
          if(!isPlayerSelectionMode) {
            // Mode sélection du nombre de joueurs
            if(gameSelected < nbTotalGame){
              gameSelected++;
            }else{
              gameSelected=1
            }
            $('.box').removeClass('selected');
            $('.boxGame'+gameSelected).addClass('selected');
          } else {
            // Mode sélection des profils - faire défiler les sélections de joueurs
            let visiblePlayers = [];
            $('.player-selection').each(function() {
              if ($(this).is(':visible')) {
                // Extraire le numéro du joueur de la classe (par ex. "player-1" -> 1)
                const playerClass = $(this).attr('class').split(' ').find(cls => cls.startsWith('player-'));
                if (playerClass) {
                  const playerNumber = parseInt(playerClass.replace('player-', ''));
                  visiblePlayers.push(playerNumber);
                }
              }
            });
            
            // Trouver l'indice du joueur actif
            let currentActivePlayer = 0;
            $('.player-selection.active').each(function() {
              const playerClass = $(this).attr('class').split(' ').find(cls => cls.startsWith('player-'));
              if (playerClass) {
                currentActivePlayer = parseInt(playerClass.replace('player-', ''));
              }
            });
            
            let currentActiveIndex = visiblePlayers.indexOf(currentActivePlayer);
            if (currentActiveIndex === -1) currentActiveIndex = 0;
            
            // Passer au joueur suivant ou revenir au premier
            let nextIndex = (currentActiveIndex + 1) % visiblePlayers.length;
            let nextPlayer = visiblePlayers[nextIndex];
            
            // Mise à jour de l'interface
            $('.player-selection').removeClass('active');
            $('.player-' + nextPlayer).addClass('active');
          }
        }else if(msg === 'btnValidate'){
          if(!isPlayerSelectionMode) {
            // Premier appui sur btnValidate - affiche la sélection des profils
            let nbPLayer = $('.boxGame'+gameSelected).data('nbplayer');
            showPlayerSelection(nbPLayer);
            isPlayerSelectionMode = true;
          } else {
            // Second appui sur btnValidate - démarre la partie
            startGame();
          }
        }else if(msg === 'btnCancel'){
          if(isPlayerSelectionMode) {
            // Retour à la sélection du nombre de joueurs
            isPlayerSelectionMode = false;
            $('.player-profiles').hide();
            $('.player-number-selection').show();
          } else {
            // Retour au menu principal
            window.location.replace("/");
          }
        }
      }

      setTimeout(function(){
        lastMsg = '';
      }, 500);
    }

    // Gestion de la sélection des joueurs
    function showPlayerSelection(numPlayers) {
      // Cacher la sélection du nombre de joueurs
      $('.player-number-selection').hide();
      
      // Afficher la section des profils de joueurs
      $('.player-profiles').show();
      
      // Afficher seulement le nombre de sélections de joueurs nécessaires
      for (let i = 1; i <= numPlayers; i++) {
        $('.player-' + i).show();
      }
      
      // Initialiser le tableau des joueurs sélectionnés
      for (let i = 1; i <= numPlayers; i++) {
        selectedPlayers[i] = 'default';
      }
      
      // Mettre la première sélection en surbrillance
      $('.player-1').addClass('active');
      
      // Réinitialiser les sélecteurs pour s'assurer qu'ils sont affichés correctement
      setTimeout(function() {
        $('select.browser-default').each(function() {
          $(this).css('display', 'block');
        });
      }, 100);
    }
    
    // Ajouter les gestionnaires d'événements pour la sélection des joueurs au clic
    $(document).ready(function() {
      // Désactivation de l'initialisation Materialize pour les sélecteurs
      // qui pourrait interférer avec notre affichage
      // $('select').formSelect();
      
      // S'assurer que tous les sélecteurs sont visibles
      $('select.browser-default').css('display', 'block');
      
      // Sélection du nombre de joueurs au clic
      $('.box[data-nbPlayer]').on('click', function() {
        // Mettre à jour la boîte sélectionnée
        $('.box').removeClass('selected');
        $(this).addClass('selected');
        
        // Mettre à jour l'index du jeu sélectionné
        gameSelected = parseInt($(this).attr('class').split('boxGame')[1].split(' ')[0]);
        
        // Afficher la sélection des profils
        let nbPlayer = $(this).data('nbplayer');
        showPlayerSelection(nbPlayer);
        isPlayerSelectionMode = true;
      });
      
      // Navigation entre les joueurs au clic
      $(document).on('click', '.player-selection', function() {
        $('.player-selection').removeClass('active');
        $(this).addClass('active');
      });
    });
    
    // Gestion des changements de sélection
    $(document).on('change', 'select[id^="player-"]', function() {
      const playerId = $(this).attr('id').split('-')[1];
      selectedPlayers[playerId] = $(this).val();
    });
    
    // Fonction de démarrage du jeu
    function startGame() {
      let game = "<%- game %>";
      let nbPLayer = 0;
      
      // En mode sélection de profils, compter le nombre de joueurs affichés
      $('.player-selection').each(function() {
        if ($(this).is(':visible')) {
          nbPLayer++;
        }
      });
      
      if (nbPLayer === 0) {
        // Fallback si aucun joueur n'est affiché (peu probable)
        nbPLayer = $('.boxGame'+gameSelected).data('nbplayer');
      }
      
      let playerQuery = '';
      
      // Construire la chaîne de requête avec les ID des joueurs
      for (let i = 1; i <= nbPLayer; i++) {
        playerQuery += '&player' + i + '=' + (selectedPlayers[i] || 'default');
      }
      
      window.location.replace("/game/" + game + "?nbPlayer=" + nbPLayer + playerQuery);
    }
    
    // Gestion du bouton de démarrage
    $('#startGameBtn').on('click', function() {
      startGame();
    });

    function forceSelectGame(){
      window.location.replace("/game/cricket?nbPlayer=4");
    }
  </script>
</body>
</html>

